name: Deploy to AWS Lambda

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  AWS_REGION: us-east-1
  TF_VERSION: 1.5.0

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TF_VERSION }}
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
    
    - name: Install Serverless Framework
      run: |
        npm install -g serverless@3
        npm install -g serverless-python-requirements
    
    - name: Deploy Infrastructure
      working-directory: terraform
      run: |
        terraform init
        terraform plan -var="db_password=${{ secrets.DB_PASSWORD }}" -out=tfplan
        terraform apply tfplan
        echo "DATABASE_URL=$(terraform output -raw database_url)" >> $GITHUB_ENV
    
    - name: Deploy Lambda
      run: |
        export DATABASE_URL="${{ env.DATABASE_URL }}"
        export SECRET_KEY="${{ secrets.SECRET_KEY }}"
        serverless deploy --stage prod
    
    - name: Run Tests
      run: |
        pip install -r requirements-lambda.txt
        python -m pytest tests/ -v